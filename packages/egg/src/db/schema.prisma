// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("AUTH_DB")
}

model GuildRoleMenuOption {
  id        Int             @id @default(autoincrement())
  guild     Guild           @relation(fields: [guildId], references: [id])
  guildId   String

  text      String
  emoji     String
  role      String
}

model RatioBattleResult {
  id        Int             @id @default(autoincrement())
  guild     Guild           @relation(fields: [guildId], references: [id])
  guildId   String
  
  messageId String

  winnerId  String
  loserId   String

  insults   Int
  timestamp DateTime
}

model Guild {
  id              String                @id
  members         GuildMember[]

  // ROLE MENU
  roleMenu        GuildRoleMenuOption[]

  // RATIO BATTLES
  rbEnabled       Boolean               @default(false)
  rbResults       RatioBattleResult[]

  // REACTION WORDS
  rwEnabled       Boolean               @default(false)

  // XP
  xpEnabled       Boolean               @default(false)
  xpMinChar       Int                   @default(0)
  xpMaxMsgPerMin  Int                   @default(5)
  xpRoleRewards   GuildXPRoleReward[]
  xpBListChan     GuildXPBlacklistedChannel[]

  // XP: Server multiplier
  xpGuildMult     Float                 @default(1.0)
  xpStreakMsgReq  Int                   @default(500)
  xpStreakCombo   Float                 @default(0.1)

  // XP: Boost (per messages)
  xpBoostEnabled  Boolean               @default(true)
  xpBoostMsgAmnt  BigInt                @default(100)
  xpBoostMin      Int                   @default(50)
  xpBoostMax      Int                   @default(100)

  // XP: Ratio Battles
  xpRbEnabled     Boolean               @default(true)
  xpRbAmount      Int                   @default(50)
}


model GuildMember {
  id          String          @id @default(uuid())
  userId      String          

  guild       Guild           @relation(fields: [guildId], references: [id])
  guildId     String

  xp          BigInt          @default(0)
  xpMessages  BigInt          @default(0)
  xpBanned    Boolean         @default(false)

  rbEnabled   Boolean         @default(true)

  achievements GuildMemberAchievement[]
}

model GuildMemberAchievement {
  id        String          @id @default(uuid())
  member    GuildMember     @relation(fields: [memberId], references: [id])
  memberId  String

  achId     String
}

model GuildXPRoleReward {
  id        String          @id @default(uuid())
  guild     Guild           @relation(fields: [guildId], references: [id])
  guildId   String

  roleId    String
  level     Int
}

model GuildXPBlacklistedChannel {
  id        String          @id @default(uuid())
  guild     Guild           @relation(fields: [guildId], references: [id])
  guildId   String

  channelId String
}